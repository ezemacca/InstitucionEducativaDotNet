@page "/verEstudiantes"

<PageTitle>VerEstudiantes</PageTitle>

@inject AgregarEstudianteUseCase AgregarEstudianteUseCase
@inject EliminarEstudianteUseCase EliminarEstudianteUseCase
@inject GetEstudiantesUseCase GetEstudiantesUseCase
@inject GetEstudianteUseCase GetEstudianteUseCase
@inject NavigationManager Navegador
@inject IJSRuntime JsRuntime



<h1>Estudiantes: </h1>
<table class="table">

<td>
    <button class="btn btn-success" @onclick="()=>agregarEstudiante()" > Agregar Nuevo Estudiante</button>
</td>
<td>
    <a href="listadoEstudiantesCursando"><button class="btn btn"> Ver estudiantes aun cursando</button></a>
</td>
<td>
    <a href="listadoEstudiantesCursoFinalizado"><button class="btn btn" > Ver estudiantes con cursos finalizados</button></a>
</td>

</table>
 <table class="table">
        <thead>
            <tr>
                <th>DNI</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Mail</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Estudiante in _estudiantes)
             { 
                <tr>
                    <td>@Estudiante.DNI</td>
                    <td>@Estudiante.Nombre</td>
                    <td>@Estudiante.Apellido</td>
                    <td>@Estudiante.Mail</td> 
                    <td>
                        @* <button class="btn btn-primary btn-xs" >Ver Estudiante </button> *@
                        <button class="btn btn-primary btn-xs" @onclick="()=>verCursosDelEstudiante(Estudiante.Id)"> Ver cursos </button>
                        <button class="btn btn-info btn-xs"  @onclick="()=>modificarEstudiante(Estudiante.Id)">Modificar Estudiante</button>
                        <button class="btn btn-danger btn-xs"  @onclick="()=>eliminarEstudiante(Estudiante.Id)" >Eliminar Estudiante</button>
                    </td> 
                </tr>

                @* DENTRO DE LOS BOTONES *@
                 @* *@
                @* *@
            } 
        </tbody>
        
    </table>

@code{
    List<Estudiante> _estudiantes = new List<Estudiante>();
     protected override void OnInitialized()
    {     
        _estudiantes = GetEstudiantesUseCase.Ejecutar();
    }
    void verCursosDelEstudiante(int id_estudiante){
        
        Navegador.NavigateTo($"verCursosEstudiante/{id_estudiante}");
    }

    void agregarEstudiante(){
        Navegador.NavigateTo($"agregarEstudiante");
    }

    void modificarEstudiante(int Id){
        Navegador.NavigateTo($"modificarEstudiante/{Id}");
    }

    async Task eliminarEstudiante(int id)
    {
        var _estudianteSeleccionado= GetEstudianteUseCase.Ejecutar(id);
        if(_estudianteSeleccionado != null)
        {
            bool confirmado= await JsRuntime.InvokeAsync<bool>("confirm",$"Esta seguro que desea borrar el estudiante con id {_estudianteSeleccionado.Id}?");
            if(confirmado)
            {
                EliminarEstudianteUseCase.Ejecutar(id);
                _estudiantes= GetEstudiantesUseCase.Ejecutar();
            }
        }
    }
}
